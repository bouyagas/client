{"ast":null,"code":"var _jsxFileName = \"/Users/mohamedbgassama/code/knowledgeHouse/projects/alumni_network-alt/pages/login.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport gql from 'graphql-tag';\nimport { useMutation } from '@apollo/react-hooks';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Icon from '@material-ui/core/Icon';\nimport Email from '@material-ui/icons/Email';\nimport People from '@material-ui/icons/People';\nimport Header from '../components/Header/Header';\nimport HeaderLinks from '../components/Header/HeaderLinks';\nimport Footer from '../components/Footer/Footer';\nimport GridContainer from '../components/Grid/GridContainer';\nimport GridItem from '../components/Grid/GridItem';\nimport Button from '../components/CustomButtons/Button';\nimport Card from '../components/Card/Card';\nimport CardBody from '../components/Card/CardBody';\nimport CardHeader from '../components/Card/CardHeader';\nimport CardFooter from '../components/Card/CardFooter';\nimport CustomInput from '../components/CustomInput/CustomInput';\nimport styles from '../assets/jss/nextjs-material-kit/pages/loginPage'; //@ts-ignore\n\nimport image from '../assets/img/login_user.jpeg'; // @ts-ignore\n\nconst useStyles = makeStyles(styles);\nconst Login_User = gql`\n  mutation login($username: String!, $email: String!, $password: String!) {\n    login(input: { username: $username, email: $email, password: $password }) {\n      token\n      user {\n        username\n        email\n        avatar\n      }\n    }\n  }\n`;\nexport default function LoginPage(props) {\n  const [cardAnimaton, setCardAnimation] = React.useState('cardHidden');\n  const [values, setValues] = React.useState({\n    username: '',\n    email: '',\n    password: ''\n  });\n  const [LogInUser, {\n    loading,\n    error,\n    data\n  }] = useMutation(Login_User, {\n    update(proxy, result) {\n      console.log(result);\n    },\n\n    variables: values\n  });\n\n  const handleOnChangeValue = event => {\n    setValues(_objectSpread({}, values, {\n      [event.target.name]: event.target.value\n    }));\n  };\n\n  const handleOnSubmit = event => {\n    event.preventDefault();\n    registerUser();\n  };\n\n  setTimeout(function () {\n    setCardAnimation('');\n  }, 700);\n  const classes = useStyles();\n  const rest = Object.assign({}, props);\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, __jsx(Header, _extends({\n    absolute: true,\n    color: \"transparent\",\n    brand: \"The Alumni Network\",\n    rightLinks: __jsx(HeaderLinks, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    })\n  }, rest, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  })), __jsx(\"div\", {\n    className: classes.pageHeader,\n    style: {\n      backgroundImage: 'url(' + image + ')',\n      backgroundSize: 'cover',\n      backgroundPosition: 'top center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, __jsx(GridContainer, {\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, __jsx(GridItem, {\n    xs: 12,\n    sm: 6,\n    md: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, __jsx(Card, {\n    className: classes[cardAnimaton],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, __jsx(\"form\", {\n    className: classes.form,\n    onSubmit: handleOnSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, __jsx(CardHeader, {\n    color: \"primary\",\n    className: classes.cardHeader,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, __jsx(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, \"Log In\"), __jsx(\"div\", {\n    className: classes.socialLine,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, __jsx(Button, {\n    justIcon: true,\n    href: \"#pablo\",\n    target: \"_blank\",\n    color: \"transparent\",\n    onClick: e => e.preventDefault(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, __jsx(\"i\", {\n    className: 'fab fa-twitter',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  })), __jsx(Button, {\n    justIcon: true,\n    href: \"#pablo\",\n    target: \"_blank\",\n    color: \"transparent\",\n    onClick: e => e.preventDefault(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, __jsx(\"i\", {\n    className: 'fab fa-facebook',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  })), __jsx(Button, {\n    justIcon: true,\n    href: \"#pablo\",\n    target: \"_blank\",\n    color: \"transparent\",\n    onClick: e => e.preventDefault(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, __jsx(\"i\", {\n    className: 'fab fa-github',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  })))), __jsx(\"p\", {\n    className: classes.divider,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, \"Or Be Classical\"), __jsx(CardBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, __jsx(CustomInput, {\n    labelText: \"Username...\",\n    id: \"first\",\n    formControlProps: {\n      fullWidth: true\n    },\n    inputProps: {\n      type: 'text',\n      endAdornment: __jsx(InputAdornment, {\n        position: \"end\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, __jsx(People, {\n        className: classes.inputIconsColor,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }))\n    },\n    name: \"username\",\n    value: values.username,\n    onChange: handleOnChangeValue,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }), __jsx(CustomInput, {\n    labelText: \"Email...\",\n    id: \"email\",\n    formControlProps: {\n      fullWidth: true\n    },\n    inputProps: {\n      type: 'email',\n      endAdornment: __jsx(InputAdornment, {\n        position: \"end\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, __jsx(Email, {\n        className: classes.inputIconsColor,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }))\n    },\n    name: \"email\",\n    value: values.email,\n    onChange: handleOnChangeValue,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }), __jsx(CustomInput, {\n    labelText: \"Password\",\n    id: \"pass\",\n    formControlProps: {\n      fullWidth: true\n    },\n    inputProps: {\n      type: 'password',\n      endAdornment: __jsx(InputAdornment, {\n        position: \"end\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, __jsx(Icon, {\n        className: classes.inputIconsColor,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, \"lock_outline\")),\n      autoComplete: 'off'\n    },\n    name: \"password\",\n    value: values.password,\n    onChange: handleOnChangeValue,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  })), __jsx(CardFooter, {\n    className: classes.cardFooter,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }, __jsx(Button, {\n    simple: true,\n    color: \"primary\",\n    size: \"lg\",\n    href: \"/profile\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }, \"Sign In\"))))))), __jsx(Footer, {\n    whiteFont: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  })));\n}","map":{"version":3,"sources":["/Users/mohamedbgassama/code/knowledgeHouse/projects/alumni_network-alt/pages/login.js"],"names":["React","gql","useMutation","makeStyles","InputAdornment","Icon","Email","People","Header","HeaderLinks","Footer","GridContainer","GridItem","Button","Card","CardBody","CardHeader","CardFooter","CustomInput","styles","image","useStyles","Login_User","LoginPage","props","cardAnimaton","setCardAnimation","useState","values","setValues","username","email","password","LogInUser","loading","error","data","update","proxy","result","console","log","variables","handleOnChangeValue","event","target","name","value","handleOnSubmit","preventDefault","registerUser","setTimeout","classes","rest","pageHeader","backgroundImage","backgroundSize","backgroundPosition","container","form","cardHeader","socialLine","e","divider","fullWidth","type","endAdornment","inputIconsColor","autoComplete","cardFooter"],"mappings":"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","sourcesContent":["import React from 'react';\nimport gql from 'graphql-tag';\nimport { useMutation } from '@apollo/react-hooks';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Icon from '@material-ui/core/Icon';\nimport Email from '@material-ui/icons/Email';\nimport People from '@material-ui/icons/People';\nimport Header from '../components/Header/Header';\nimport HeaderLinks from '../components/Header/HeaderLinks';\nimport Footer from '../components/Footer/Footer';\nimport GridContainer from '../components/Grid/GridContainer';\nimport GridItem from '../components/Grid/GridItem';\nimport Button from '../components/CustomButtons/Button';\nimport Card from '../components/Card/Card';\nimport CardBody from '../components/Card/CardBody';\nimport CardHeader from '../components/Card/CardHeader';\nimport CardFooter from '../components/Card/CardFooter';\nimport CustomInput from '../components/CustomInput/CustomInput';\nimport styles from '../assets/jss/nextjs-material-kit/pages/loginPage';\n\n//@ts-ignore\nimport image from '../assets/img/login_user.jpeg';\n\n// @ts-ignore\nconst useStyles = makeStyles(styles);\n\nconst Login_User = gql`\n  mutation login($username: String!, $email: String!, $password: String!) {\n    login(input: { username: $username, email: $email, password: $password }) {\n      token\n      user {\n        username\n        email\n        avatar\n      }\n    }\n  }\n`;\n\nexport default function LoginPage(props) {\n  const [cardAnimaton, setCardAnimation] = React.useState('cardHidden');\n  const [values, setValues] = React.useState({\n    username: '',\n    email: '',\n    password: ''\n  });\n\n  const [LogInUser, { loading, error, data }] = useMutation(Login_User, {\n    update(proxy, result) {\n      console.log(result);\n    },\n    variables: values\n  });\n\n  const handleOnChangeValue = event => {\n    setValues({ ...values, [event.target.name]: event.target.value });\n  };\n\n  const handleOnSubmit = event => {\n    event.preventDefault();\n    registerUser();\n  };\n\n  setTimeout(function() {\n    setCardAnimation('');\n  }, 700);\n\n  const classes = useStyles();\n  const { ...rest } = props;\n  return (\n    <div>\n      <Header\n        absolute\n        color='transparent'\n        brand='The Alumni Network'\n        rightLinks={<HeaderLinks />}\n        {...rest}\n      />\n      <div\n        className={classes.pageHeader}\n        style={{\n          backgroundImage: 'url(' + image + ')',\n          backgroundSize: 'cover',\n          backgroundPosition: 'top center'\n        }}\n      >\n        <div className={classes.container}>\n          <GridContainer justify='center'>\n            <GridItem xs={12} sm={6} md={4}>\n              <Card className={classes[cardAnimaton]}>\n                <form className={classes.form} onSubmit={handleOnSubmit}>\n                  <CardHeader color='primary' className={classes.cardHeader}>\n                    <h4>Log In</h4>\n                    <div className={classes.socialLine}>\n                      <Button\n                        justIcon\n                        href='#pablo'\n                        target='_blank'\n                        color='transparent'\n                        onClick={e => e.preventDefault()}\n                      >\n                        <i className={'fab fa-twitter'} />\n                      </Button>\n                      <Button\n                        justIcon\n                        href='#pablo'\n                        target='_blank'\n                        color='transparent'\n                        onClick={e => e.preventDefault()}\n                      >\n                        <i className={'fab fa-facebook'} />\n                      </Button>\n                      <Button\n                        justIcon\n                        href='#pablo'\n                        target='_blank'\n                        color='transparent'\n                        onClick={e => e.preventDefault()}\n                      >\n                        <i className={'fab fa-github'} />\n                      </Button>\n                    </div>\n                  </CardHeader>\n                  <p className={classes.divider}>Or Be Classical</p>\n                  <CardBody>\n                    <CustomInput\n                      labelText='Username...'\n                      id='first'\n                      formControlProps={{\n                        fullWidth: true\n                      }}\n                      inputProps={{\n                        type: 'text',\n                        endAdornment: (\n                          <InputAdornment position='end'>\n                            <People className={classes.inputIconsColor} />\n                          </InputAdornment>\n                        )\n                      }}\n                      name='username'\n                      value={values.username}\n                      onChange={handleOnChangeValue}\n                    />\n                    <CustomInput\n                      labelText='Email...'\n                      id='email'\n                      formControlProps={{\n                        fullWidth: true\n                      }}\n                      inputProps={{\n                        type: 'email',\n                        endAdornment: (\n                          <InputAdornment position='end'>\n                            <Email className={classes.inputIconsColor} />\n                          </InputAdornment>\n                        )\n                      }}\n                      name='email'\n                      value={values.email}\n                      onChange={handleOnChangeValue}\n                    />\n                    <CustomInput\n                      labelText='Password'\n                      id='pass'\n                      formControlProps={{\n                        fullWidth: true\n                      }}\n                      inputProps={{\n                        type: 'password',\n                        endAdornment: (\n                          <InputAdornment position='end'>\n                            <Icon className={classes.inputIconsColor}>\n                              lock_outline\n                            </Icon>\n                          </InputAdornment>\n                        ),\n                        autoComplete: 'off'\n                      }}\n                      name='password'\n                      value={values.password}\n                      onChange={handleOnChangeValue}\n                    />\n                  </CardBody>\n                  <CardFooter className={classes.cardFooter}>\n                    <Button simple color='primary' size='lg' href='/profile'>\n                      Sign In\n                    </Button>\n                  </CardFooter>\n                </form>\n              </Card>\n            </GridItem>\n          </GridContainer>\n        </div>\n        <Footer whiteFont />\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}